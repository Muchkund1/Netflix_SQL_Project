DROP TABLE IF EXISTS netflix;
CREATE TABLE netflix
(
	show_id	VARCHAR(5),
	type    VARCHAR(10),
	title	VARCHAR(250),
	director VARCHAR(550),
	casts	VARCHAR(1050),
	country	VARCHAR(550),
	date_added	VARCHAR(55),
	release_year	INT,
	rating	VARCHAR(15),
	duration	VARCHAR(15),
	listed_in	VARCHAR(250),
	description VARCHAR(550)
);

select * from netflix

select count(*) as total_count
from netflix

------------------data cleaning--------------------------------------------------------------------------------------------------------------------------------------
with cte as (
select *,row_number() over(partition by show_id,type,title,director,casts,country,date_added,release_year,rating,duration,listed_in,description) as rn
from netflix) --no repeat data 

select * from cte
where rn >1 

select distinct show_id from netflix
WHERE show_id LIKE 'S%';  --check weather show_id start with Captial S or not


UPDATE netflix   --remove leading and trailing spaces
SET date_added = TRIM(date_added)

select * from netflix
where duration is null
order by rating

UPDATE netflix  --updating the null value
set duration = rating
where duration is null 

select * from netflix
order by rating

select distinct date_added from netflix

UPDATE netflix --, South Korea replace , and space 
SET country = REPLACE(country, ', ', '')
WHERE country = ', South Korea'

-------------------------EDA------------------------------------------------------------------------------------------------------------------------------------------------------------

select type,count(type) as Count_Movie  -- 1. Count the number of Movies vs TV Shows
from netflix
group by type

select * -- 2. List all movies released in a specific year
from netflix
where release_year = 2021

with cte as ( --3.List all TV shows with more than 5 seasons
select * 
from netflix
where type = 'TV Show')
select * 
from cte
where CAST(SUBSTRING(duration FROM '^[0-9]+') as INT) > 5

with cte2 as ( --4.Find the most common rating for movies and TV shows
with cte as (
select type,rating,count(rating) as rating_count
from netflix
group by type,rating)
select *,row_number() over(partition by type order by rating_count desc) as rn
from cte)
select type,rating as most_frequent_rating
from cte2
where rn = 1

/*5.Categorize the content based on the presence of the keywords 'kill' and 'violence' in 
the description field. Label content containing these keywords as 'Bad' and all other 
content as 'Good'. Count how many items fall into each category.*/

with cte as (
select type,case when description LIKE '%kill%' or description LIKE '%violence%' then 'Bad'
            else 'Good'
	   End as Category
from netflix)
select *,count(Category) as Category_count
from cte
group by type,Category
order by Category_count desc

with cte as ( -- 6. List all movies that are documentaries
select type,title,listed_in
from netflix
where type = 'Movie')
select title
from cte 
where listed_in ILIKE '%Documentaries%'

with cte as ( -- 7. Find all the movies director by 'Rajkumar Hirani'!
select type,title,director
from netflix
where type = 'Movie')
select title
from cte 
where director ILIKE '%Rajkumar Hirani%'

with cte3 as ( --8.Increase/decrese in movie_count in netflix by year
with cte2 as ( 
with cte as (  
SELECT type,EXTRACT(YEAR FROM TO_DATE(date_added, 'Month DD, YYYY')) AS years
FROM netflix
where type = 'Movie')
select years,count(years) as count_movie
from cte
group by years
order by years desc)
select *,lead(count_movie,1,count_movie) over(order by years desc) as privous_count,Round((count_movie-lead(count_movie,1,count_movie) over(order by years desc))*100.0/lead(count_movie,1,count_movie) over(order by years desc),2) as percentage_increase_decrease
from cte2)
select years,count_movie,privous_count,CONCAT(percentage_increase_decrease,'%') as percentage_increase_decrease
from cte3

select type,release_year,count(release_year) as Movie_Count --9.Top 5 year release by movie
from netflix
group by type,release_year
having type = 'Movie'
order by count(release_year) desc
LIMIT 5

select type,release_year,count(release_year) as TV_Show_Count --10.Top 5 year release by TV Show
from netflix
group by type,release_year
having type = 'TV Show'
order by count(release_year) desc
LIMIT 5

select * --11. List all movies released in a specific year (e.g., 2020)
from netflix
where release_year = 2020 and type = 'Movie'

Select * --12. Find all content without a director
from netflix
where director is null

select * -- 13. Identify the longest movie
from netflix
where type = 'Movie'
order by CAST(SUBSTRING(duration FROM '^[0-9]+') as INT) desc 
LIMIT 1
/*if you apply order by duration so order by not work properly*/
/*Duration column contains string values like ex= "74 min" that cannot be directly cast to integers without first extracting the numeric part. 
  To handle this, we need to extract the numeric portion correctly and then cast it.*/

select UNNEST(STRING_TO_ARRAY(listed_in, ',')) as genre_row,count(title) as total_count -- 14. Count the number of content items in each genre
from netflix
group by UNNEST(STRING_TO_ARRAY(listed_in, ','))
/*STRING_TO_ARRAY is a function in PostgreSQL that splits a string into an array based on a specified delimiter. 
 This function is useful when you have a string with multiple elements separated by a delimiter (like a comma) and you want to process each element separately.*/
/*UNNEST is a function in PostgreSQL that expands an array into a set of rows.*/

select title --15.Find content added in the last 5 years
from netflix
where TO_DATE(date_added,'Month DD, YYYY') >= CURRENT_DATE- INTERVAL '5 years'

with cte as ( -- 16. Find how many movies actor 'Salman Khan' appeared in last 10 years!
select title,casts,release_year
from netflix
where type = 'Movie' and casts ILIKE '%Salman Khan%')
select title,casts
from cte
where release_year >= EXTRACT(YEAR FROM CURRENT_DATE - INTERVAL '10 years')

-- 17. Find the top 10 actors who have appeared in the highest number of movies produced in India.
select UNNEST(STRING_TO_ARRAY(casts, ',')) as Actor,count(title) as total_count
from netflix
group by UNNEST(STRING_TO_ARRAY(casts, ',')),type,country
having type = 'Movie' and country = 'India'
order by count(title) desc
LIMIT 10

select UNNEST(STRING_TO_ARRAY(country, ',')) as country, count(title)-- 18. Find the top 5 countries with the most content on Netflix
from netflix
group by UNNEST(STRING_TO_ARRAY(country, ','))
order by count(title) desc
LIMIT 5

-- 19. Find each year and the average numbers of content release by India on netflix. 
-- return top 5 year with highest avg content release !
SELECT 
	country,
	release_year,
	COUNT(show_id) as total_release,
	ROUND(
		COUNT(show_id)::numeric/
								(SELECT COUNT(show_id) FROM netflix WHERE country = 'India')::numeric * 100 
		,2
		)
		as avg_release
FROM netflix
WHERE country = 'India' 
GROUP BY country, 2
ORDER BY avg_release DESC 
LIMIT 5
